# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Reaction {
  """ID of the reaction"""
  id: String!

  """Variant of the reaction"""
  variant: ReactionVariant!

  """User, that have reacted"""
  author: User!

  """ID of the user, that have reacted"""
  authorId: String!

  """Post, associated with the reaction"""
  post: Post

  """ID of the post, associated with the reaction"""
  postId: String

  """Comment, associated with the reaction"""
  comment: Comment

  """ID of the comment, associated with the reaction"""
  commentId: String
}

"""Supported variants for a reaction"""
enum ReactionVariant {
  LIKE
  LOVE
  ANGRY
  SAD
  CARE
}

type Comment {
  """ID of the comment"""
  id: String!

  """Text content of the comment"""
  text: String!

  """ID of the author"""
  authorId: String!

  """Author of the comment"""
  author: User!

  """ID of the post"""
  postId: String!

  """Post, associated with the comment"""
  post: Post!

  """List of reactions, associated with the comment"""
  reactions: [Reaction!]

  """ID of the parent comment"""
  parentId: String

  """Date of creation"""
  createdAt: DateTime!

  """Last updated"""
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Post {
  """ID of the post"""
  id: String!

  """Title of the post"""
  title: String!

  """Text of the post"""
  text: String!

  """Author of the post"""
  author: User!

  """ID of the author"""
  authorId: String!

  """Number of views"""
  views: Int!

  """List of comments, associated with the post"""
  comments: [Comment!]

  """List of reactions, associated with the user"""
  reactions: [Reaction!]

  """Date of creation"""
  createdAt: DateTime!

  """Last updated"""
  updatedAt: DateTime!
}

type User {
  """ID of the user"""
  id: String!

  """First name of the user"""
  firstName: String!

  """Last name of the user"""
  lastName: String!

  """Email of the user"""
  email: String!

  """Role of the user"""
  role: String!

  """List of posts, created by the user"""
  posts: [Post!]

  """List of comments, created by the user"""
  comments: [Comment!]

  """List of reactions, made by the user"""
  reactions: [Reaction!]
}

type Query {
  users: [User!]!
  user(id: String!): User!
  posts: [Post!]!
  post(id: String!): Post!
  comments: [Comment!]!
  comment(id: String!): Comment!
  reactions: [Reaction!]!
  reaction(id: String!): Reaction!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User!
  createPost(createPostInput: CreatePostInput!): Post!
  updatePost(updatePostInput: UpdatePostInput!): Post!
  removePost(id: String!): Post!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  removeComment(id: String!): Comment!
  createReaction(createReactionInput: CreateReactionInput!): Reaction!
  updateReaction(updateReactionInput: UpdateReactionInput!): Reaction!
  removeReaction(id: String!): Reaction!
}

input CreateUserInput {
  """First name of the user"""
  firstName: String!

  """Last name of the user"""
  lastName: String!

  """Email of the user"""
  email: String!

  """Role of the user"""
  role: String!
}

input UpdateUserInput {
  """First name of the user"""
  firstName: String

  """Last name of the user"""
  lastName: String

  """Email of the user"""
  email: String

  """Role of the user"""
  role: String

  """ID of the user"""
  id: String!
}

input CreatePostInput {
  """Title of the post"""
  title: String!

  """Text of the post"""
  text: String!

  """ID of the author of the post"""
  authorId: String!
}

input UpdatePostInput {
  """Title of the post"""
  title: String

  """Text of the post"""
  text: String

  """ID of the author of the post"""
  authorId: String

  """ID of the post"""
  id: String!

  """Number of views"""
  views: Int!
}

input CreateCommentInput {
  """Text of the comment"""
  text: String!

  """ID of the post, associated with the comment"""
  postId: String!

  """ID of the author of the comment"""
  authorId: String!

  """ID of the parent the comment"""
  parentId: String
}

input UpdateCommentInput {
  """Text of the comment"""
  text: String

  """ID of the post, associated with the comment"""
  postId: String

  """ID of the author of the comment"""
  authorId: String

  """ID of the parent the comment"""
  parentId: String

  """ID of the comment"""
  id: String!
}

input CreateReactionInput {
  """Variant of the reaction"""
  variant: ReactionVariant!

  """ID of the post, associated with the comment"""
  postId: String

  """ID of the comment, associated with the comment"""
  commentId: String

  """ID of the user, that have reacted"""
  authorId: String!
}

input UpdateReactionInput {
  """Variant of the reaction"""
  variant: ReactionVariant

  """ID of the post, associated with the comment"""
  postId: String

  """ID of the comment, associated with the comment"""
  commentId: String

  """ID of the user, that have reacted"""
  authorId: String

  """ID of the reaction"""
  id: String!
}